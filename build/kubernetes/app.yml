apiVersion: v1
kind: Namespace
metadata:
  name: $N_NAMESPACE

---
# ingress controller rules
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ing
  namespace: $N_NAMESPACE
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/limit-rpm: "20"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
  labels:
    app: devsecops-cm
    environment: $N_ENVIRONMENT
spec:
  rules:
    - host: $N_URL
      http:
        paths:
          - backend:
              serviceName: svc
              servicePort: 80
            path: /
  tls:
    - secretName: ing-tls

---
apiVersion: v1
kind: Service
metadata:
  name: svc
  namespace: $N_NAMESPACE
  labels:
    app: devsecops-cm
    environment: $N_ENVIRONMENT
spec:
  type: NodePort
  ports:
    - port: 80
      name: "http"
      targetPort: 80
  selector:
    app: devsecops-cm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devsecops-cm
  namespace: $N_NAMESPACE
  labels:
    app: devsecops-cm
    environment: $N_ENVIRONMENT

spec:
  selector:
    matchLabels:
      app: devsecops-cm
  replicas: 1
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1

  # only keep last n revisions in history
  revisionHistoryLimit: 6

  template:
    metadata:
      labels:
        app: devsecops-cm
        environment: $N_ENVIRONMENT

    spec:
      restartPolicy: Always

      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf

      containers:
        - name: app
          image: $N_CONTAINER_NAME
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: nginx-conf
              readOnly: true
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /robots.txt
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
