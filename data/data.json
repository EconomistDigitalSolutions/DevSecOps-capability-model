{
  "headings": [
    { "title": "principle", "description": "" },
    { "title": "level 1", "description": "Low adoption/attempts of basic best practices" },
    { "title": "level 2", "description": "Some minority adoption of basic best practices" },
    { "title": "level 3", "description": "Majority adoption of best practices" },
    { "title": "level 4", "description": "Advanced implementation of principles across the board" }
  ],
  "principles": [
    {
      "principle": {
        "value": "Observability",
        "description": "How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?",
        "questions": []
      },
      "level 1": {
        "value": "Out of the box - only",
        "description": "Just the basics you get from free from Cloudwatch, an on-server agent, htop, task manager etc.",
        "questions": [
          "Do you have to have to add lots of debug statements when there's a prod issue?",
          "Do prod issues often catch you off guard?",
          "You have little idea of how much Compute/Disk/Memory is being used by your components?",
          "You have no accurate handle on how many rpm your service is handling at a given time",
          "You have no historical view on application performance"
        ]
      },
      "level 2": {
        "value": "Basic instrumentation of portions of your stack",
        "description": "You should have some logging at least",
        "questions": [
          "Do you at least have APM turned on?",
          "Are your application logs going into a log aggregation platform?",
          "Do you have a historical view on application performance?",
          "Do you run synthetic tests to find out issues before your customers do?"
        ]
      },
      "level 3": {
        "value": "Decent coverage over all layers of the stack",
        "description": "You have to have really have some logging at least",
        "questions": [
          "Are your server/infrastructure logs going into a log aggregation platform?",
          "Can you easily track the effect of a release to production?",
          "Do you have multiple overlapping views on system health?",
          "Metrics aggregate into service quality dashboards and alerting systems"
        ]
      },
      "level 4": {
        "value": "Max Instrumentation and SLO driven dashboards",
        "description": "You can see and model your system behaviours.",
        "questions": [
          "Can you quickly triage issues and hone in on problems very shortly after they arise",
          "Do you have aggregate metrics that inform your SLOs (SLAs)?",
          "Do you have alerting and recording of your SLO performance over time?",
          "Do you have a good view on what \"normal\" looks like in terms of system behaviour?",
          "Do you have balanced and continuously improved alerting on abnormal system behaviour?",
          "You've got complete coverage of every transaction from start to finish",
          "Do you have extensive system dashboards that are used by technical and non-technical alike on a regular basis"
        ]
      },
      "scores": {
        "team 1": 0.65,
        "team 2": 0.11,
        "team n": 0.3
      }
    },
    {
      "principle": {
        "value": "Development Practices",
        "description": "Good Dev Practices that enable you to move fast and reduce legacy",
        "questions": [
          "Standardise work",
          "Improve quality",
          "Increase collaboration",
          "Legacy systems are systems that are hard to manage - nothing to do with age"
        ]
      },
      "level 1": {
        "value": "Basic/Archaic dev practices",
        "description": "You think confluence is good",
        "questions": [
          "You think git-flow is a good thing for high velocity projects",
          "You need access to a full integrated environment to do any development and testing",
          "It's difficult to deploy & release your software independently of the services that depend on it"
        ]
      },
      "level 2": {
        "value": "Starting to adopt modern dev practices",
        "description": "You have some CI/CD with the occasional manual deployment steps",
        "questions": ["You have long lived repo branches"]
      },
      "level 3": {
        "value": "Well established practices",
        "description": "You have good CI/CD best practices and a regular deployment cadence",
        "questions": [
          "Developers create and maintain their Acceptance tests",
          "Tests are run at every commit of the code",
          "You have a low number of active dev branches (<3)",
          "You pair on a lot of tasks",
          "You have fewer than 3 active and short lived branches at any time or work of Trunk Based Development"
        ]
      },
      "level 4": {
        "value": "Super optimised workflows and practices",
        "description": "You follow all best practice CI/CD and deploy on a high frequency",
        "questions": [
          "Brittle integration tests are run in their own suite independent of stable tests",
          "You mob on problems quite often",
          "You have infosec tooling integrated into most stages of the SDLC",
          "You can make large scale changes to your systems without creating significant work for other teams"
        ]
      },
      "scores": {
        "team 1": 0.7,
        "team 2": 0.2,
        "team n": 0.3
      }
    },
    {
      "principle": {
        "value": "CI/CD",
        "description": "Enable fast and quality flow from development to production reliably",
        "questions": [
          "Standardise work",
          "Improve Quality",
          "Lower Change fail rates",
          "Reduce Defects and re-work",
          "Reduce variability and batch sizes",
          "Relentlessly pursue continuous improvement",
          "Continuous Integration",
          "Continuous Delivery"
        ]
      },
      "level 1": {
        "value": "Basic CI/CD w/ lots of manual steps",
        "description": "You have a little CI/CD",
        "questions": [
          "Do you release multiple times in a month?",
          "Do you deploy at a decreasing frequency?",
          "Is your lead time for changes over 1 month?",
          "Is your change failure rate between 31-45%?",
          "Are your systems hand crafted and you have extensive snowflake servers?",
          "Are your deployment non-atomic, in a way that can leave environments in broken states following an in-CD failure?"
        ]
      },
      "level 2": {
        "value": "Some CI/CD and some tests",
        "description": "You have some CI/CD with the occasional manual deployment steps",
        "questions": [
          "Do you deploy at a constant frequency?",
          "Do you release multiple times a week?",
          "Is your lead time for changes between 1 week and 1 month?",
          "Is your change failure rate between 0-25%?"
        ]
      },
      "level 3": {
        "value": "Comprehensive CI/CD with solid & stable test suite",
        "description": "You have good CI/CD best practices and a regular deployment cadence",
        "questions": [
          "Your system and application config is kept in version control",
          "Could you release multiple times a day?",
          "Your lead time for changes is between 1 day and 1 week",
          "Your change failure rate is between 0-20%",
          "You can do blue/green deployments",
          "You use version control for all production artifacts",
          "Your deployment processes are 90% automated and any manual steps are well documented",
          "Do you load test core components before major releases and revisions?",
          "You can make deployments during business hours with negligible downtime"
        ]
      },
      "level 4": {
        "value": "Max CI/CD, tests and scans",
        "description": "You follow all best practice CI/CD and deploy on a high frequency",
        "questions": [
          "Do you deploy at an increasing frequency",
          "Do you continue to pursue continuous improvement and optimisations based on your telemetry",
          "Do you release multiple times an day? > 20 times ",
          "Your lead time for changes is between 1 hour and 1 day",
          "Your change failure rate is between 0-10%",
          "You regularly do canary deployments",
          "You make extensive use of feature flags",
          "You build and test artifacts in a virtual environment",
          "You scan for security vulnerabilities as part of CI/CD",
          "Do you load test core components before major releases and revisions?"
        ]
      },
      "scores": {
        "team 1": 0.8,
        "team 2": 0.1,
        "team n": 0.5
      }
    },
    {
      "principle": {
        "value": "Security",
        "description": "Building security into the SDLC improves delivery performance and security quality",
        "questions": [
          "How far left have you managed to shift security?",
          "How secure are our systems and do we have a good view of attack vectors."
        ]
      },
      "level 1": {
        "value": "Little to no security practices",
        "description": "You have little to no Security",
        "questions": [
          "You have no security tooling enabled",
          "Patch management is patchy at best",
          "You store secrets in your code",
          "Do your customers, the media or developers tend to report security issues, as no automation is in place?",
          "Is security an after thought, and only gets development efforts after incidents?"
        ]
      },
      "level 2": {
        "value": "Basic practices but weak implementation",
        "description": "You have some security which is mostly reactionary",
        "questions": [
          "You have AWS Security suite enabled but nobody is actively pursuing vulns",
          "You have some view on vulnerabilities in your libraries",
          "You have some view on vulnerabilities in your operating system",
          "You use some secrets management",
          "You engage in some active patch management/platform updates"
        ]
      },
      "level 3": {
        "value": "Manual scanning and remediation",
        "description": "You have minimum security practices in place",
        "questions": [
          "Do your cloud accounts pass the CIS foundations benchmark v1.2",
          "Audit logs saved and tracked for at least 1 year",
          "You have some threat modelling"
        ]
      },
      "level 4": {
        "value": "Multi layered security and compliance w/ quick remediation",
        "description": "You have extensive overlapping views of security related activity w/ regular automated scanning and well defined & observed remediation policy ",
        "questions": [
          "You have comprehensive threat modelling",
          "You have a well defined and observed remediation policy covering different types of issues",
          "You have configuration management and alerting",
          "You have implemented a container security strategy",
          "You have a team that have undergone Incident response training",
          "Audit logs saved and tracked for at least 5 years if a (suspected) incident is found",
          "You use trusted, evergreen base images with regular releases",
          "Is everybody available "
        ]
      },
      "scores": {
        "team 1": 0.3,
        "team 2": 0.1,
        "team n": 0.4
      }
    },
    {
      "principle": {
        "value": "Availability",
        "description": "How do we keep things up and running",
        "questions": [
          "Can you recover quickly from incidents a low MTTR?",
          "Can you detect incidents ahead of time?",
          "Can you failover to backup systems"
        ]
      },
      "level 1": {
        "value": "Little to no availability practices",
        "description": "Little to no availability practices",
        "questions": ["Your MTTR (mean time to recovery) during an incident averages ~ 1d"]
      },
      "level 2": {
        "value": "Basic practices",
        "description": "You have some Availability",
        "questions": ["Your MTTR (mean time to recovery) during an incident averages ~ 1d"]
      },
      "level 3": {
        "value": "Good practices and extensive measurement",
        "description": "You have good Availability",
        "questions": ["Your MTTR (mean time to recovery) during an incident averages < 6hr"]
      },
      "level 4": {
        "value": "Fully adopted and rugged SRE",
        "description": "You have fully adopted SRE practices across the board",
        "questions": [
          "You continuously monitor and improve on your numbers",
          "Do you have a low and continuously improving MTTR? avg < 1hr",
          "You follow the <a href='https://ruggedsoftware.org/'>rugged manifesto</a>"
        ]
      },
      "scores": {
        "team 1": 0.7,
        "team 2": 0.1,
        "team n": 0.3
      }
    },
    {
      "principle": {
        "value": "Durability",
        "description": "How good are our backups",
        "questions": [
          "Can you recover quickly from incidents a low MTTR?",
          "Do you have faith in your backups and evidence to support that?",
          "Can you guarantee low recovery point objectives?",
          "Can you failover to backup systems?"
        ]
      },
      "level 1": {
        "value": "You pay lip service to backups",
        "description": "You have almost no Durability",
        "questions": [
          "You have a few paragraphs on your backup strategy tucked away in Confluence somewhere",
          "You have never really tested your backups"
        ]
      },
      "level 2": {
        "value": "You have a ad-hoc tested backup and restore strategy",
        "description": "You have occasionally tested restoring your backups on an ad-hoc basis",
        "questions": [
          "You have done some manual restores and quick checks",
          "Your backups strategy and patterns are documented reasonably well",
          "You're generally aware of the things that aren't fully covered"
        ]
      },
      "level 3": {
        "value": "You have a regular tested backup and restore strategy",
        "description": "You have good Durability and can sleep at night",
        "questions": [
          "You test backups and restores of components on a quarterly basis",
          "You have thought about all the data/system corruption failpoints",
          "You're fully aware of the things that aren't fully covered and have a strategy for them",
          "You backup to different cloud accounts to reduce blast radius for gross errors"
        ]
      },
      "level 4": {
        "value": "You can restore you entire system in under 2 hours",
        "description": "You have maximum Durability",
        "questions": [
          "You have high frequency backups",
          "You run periodic game days where the entire infrastructure is destroyed",
          "You run regular game days where the random parts of infrastructure are destroyed and recovered",
          "You rehearse and strive as a team to bring the recovery time down, even changing your architecture to make it more robust"
        ]
      },
      "scores": {
        "team 1": 0.4,
        "team 2": 0.1,
        "team n": 0.6
      }
    },
    {
      "principle": {
        "value": "Culture",
        "description": "This section highlights cultural styles and values within the company",
        "questions": ["How good is your culture?"]
      },
      "level 1": {
        "value": "Power-oriented culture",
        "description": "Very limited scope of responsibility, minimal cooperation, novelty is not welcomed, information is hidden",
        "questions": [
          "Do team members feel fear of asking for feedback?",
          "Is there a punitive culture?",
          "Is cross-communication discouraged?",
          "Do employees have little responsibility?",
          "Is information readily available?"
        ]
      },
      "level 2": {
        "value": "Rule-oriented culture",
        "description": "Modest cooperation, rule-following behaviour, narrow responsibility, novelty may lead to problems",
        "questions": [
          "Is the organisation fair?",
          "Does novelty leads to problems?",
          "Focus on departmental goals",
          "Failure leads to seek justice",
          "Is information shared?"
        ]
      },
      "level 3": {
        "value": "Trust-oriented culture",
        "description": "Trust-oriented culture",
        "questions": [
          "Is there trust across the organisational hierarchy?",
          "Is cross-functional collaboration encouraged?",
          "Is communication transparent?",
          "Are new ideas welcomed?",
          "Are risks shared?"
        ]
      },
      "level 4": {
        "value": "Performance-oriented",
        "description": "Goal oriented",
        "questions": [
          "Is there a focus on organisational goal?",
          "Is work recognised as meaningful?",
          "Is cross-functional collaboration established?",
          "Is innovation sought and implemented?",
          "is there a match between personal and organisational values?",
          "Is failure seen as an opportunity to improve the system?"
        ]
      },
      "scores": {
        "team 1": 0.7,
        "team 2": 0.2,
        "team n": 0.2
      }
    }
  ]
}
